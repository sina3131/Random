# Generated by Django 4.2 on 2023-04-19 15:51

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('username', models.CharField(default='', max_length=255, null=True)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('address', models.TextField(blank=True, null=True)),
                ('img_profil', models.ImageField(default='default_profil.png', upload_to='')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('address', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Camp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=150)),
                ('description', models.TextField(default='')),
                ('img', models.ImageField(default='default_profil.png', upload_to='camp/')),
                ('date', models.DateField(default='')),
            ],
        ),
        migrations.CreateModel(
            name='Camp_register',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shirt_size', models.CharField(default='', max_length=30)),
                ('parents_name', models.CharField(default='', max_length=100)),
                ('social_security_nr', models.IntegerField(default='')),
            ],
        ),
        migrations.CreateModel(
            name='Cup_register',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_name', models.CharField(default='', max_length=100)),
                ('team_captain', models.CharField(default='', max_length=100)),
                ('age_younest_oldest_player', models.CharField(default='', max_length=100)),
                ('name_of_all_players', models.TextField(default='', max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Cups',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100)),
                ('description', models.TextField(default='')),
                ('img', models.ImageField(default='default_profil.png', upload_to='camp/')),
                ('date', models.DateField(default='')),
                ('Location', models.CharField(default='', max_length=100)),
                ('price', models.CharField(default='Gratis', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Group_traning',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100)),
                ('description', models.TextField(default='')),
                ('price', models.CharField(default='Gratis')),
                ('image', models.ImageField(default='default_profil.png', upload_to='camp/')),
            ],
        ),
        migrations.CreateModel(
            name='Groups',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Payment_type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('price', models.DecimalField(decimal_places=2, max_digits=8)),
                ('short_description', models.CharField(max_length=100)),
                ('description', models.TextField(default='')),
                ('type', models.CharField(choices=[('Once', 'Once'), ('Membership', 'Membership'), ('Package', 'Package')], default='Once', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=101)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('year_of_birth', models.IntegerField()),
                ('img_player', models.ImageField(default='default_profil.png', upload_to='')),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='players', to=settings.AUTH_USER_MODEL)),
                ('group', models.ManyToManyField(related_name='player', to='core.groups')),
            ],
        ),
        migrations.CreateModel(
            name='Prov_traning',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100)),
                ('description', models.TextField(default='')),
                ('price', models.CharField(default='Gratis')),
                ('image', models.ImageField(default='default_profil.png', upload_to='camp/')),
            ],
        ),
        migrations.CreateModel(
            name='Prov_traning_register',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100)),
                ('age', models.IntegerField(default='')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(default='', max_length=128, region=None)),
                ('parents_phone', phonenumber_field.modelfields.PhoneNumberField(default='', max_length=128, region=None)),
                ('current_team', models.CharField(default='', max_length=100)),
                ('location', models.CharField(default='', max_length=100)),
                ('day', models.DateField(default=None)),
                ('time', models.TimeField(default=None)),
                ('message', models.TextField(default='')),
            ],
        ),
        migrations.CreateModel(
            name='Pt_traning',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100)),
                ('description', models.TextField(default='')),
                ('price', models.CharField(default='Gratis')),
                ('image', models.ImageField(default='default_profil.png', upload_to='camp/')),
            ],
        ),
        migrations.CreateModel(
            name='PlayerBooking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pass_booked', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='core.booking')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='core.player')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payed_with_membership', models.BooleanField(default=False)),
                ('payed_with_payment', models.BooleanField(default=False)),
                ('payment_date', models.DateField(auto_now_add=True)),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='core.player')),
                ('player_booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='core.playerbooking')),
            ],
        ),
        migrations.CreateModel(
            name='Coach',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('certified', models.BooleanField(default=False)),
                ('customer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='coach', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Booking_Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pass_type', models.CharField(max_length=100)),
                ('payment_types', models.ManyToManyField(related_name='booking_type', to='core.payment_type')),
            ],
        ),
        migrations.AddField(
            model_name='booking',
            name='coach',
            field=models.ManyToManyField(related_name='passes_coached', to='core.coach'),
        ),
        migrations.AddField(
            model_name='booking',
            name='group',
            field=models.ManyToManyField(related_name='passes', to='core.groups'),
        ),
        migrations.AddField(
            model_name='booking',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='passes', to='core.location'),
        ),
        migrations.AddField(
            model_name='booking',
            name='pass_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='passes', to='core.booking_type'),
        ),
        migrations.AddField(
            model_name='booking',
            name='players',
            field=models.ManyToManyField(related_name='passes_played', to='core.player'),
        ),
    ]
